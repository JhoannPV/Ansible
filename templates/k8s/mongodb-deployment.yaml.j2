apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: {{ K8S_NAMESPACE }}
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: mongodb
          image: {{ MONGODB_IMAGE }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: false
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: MONGO_INITDB_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: MONGO_INITDB_PASSWORD
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          startupProbe:
            tcpSocket:
              port: 27017
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data
